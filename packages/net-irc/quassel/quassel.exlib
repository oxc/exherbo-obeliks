# Copyright 2008 Arne Janbu <arnej@ampheus.de>
# Copyright 2010 Joonas Saraj√§rvi <muepsj@gmail.com>
# Distributed under the terms of the GNU General Public License v2

require github cmake [ api=2 cmake_minimum_version=2.8.12 ]

export_exlib_phases pkg_pretend src_prepare src_install

QUASSEL_MAJOR_VERSION=$(ever range 1-2)

SUMMARY="Quassel is a Qt based IRC-client using a client-server architecture"
HOMEPAGE="http://quassel-irc.org/"
ever is_scm || DOWNLOADS="${HOMEPAGE}pub/${PNV}.tar.bz2"

LICENCES="GPL-3"
SLOT="0"

LANGS="cs da de el en_GB es fi fr gl hu it ja nb nl oc pt_BR pt ru sl sq sv tr uk zh_CN"
MYOPTIONS="
    baselayout
    client [[ description = [ Build the core-dependent Quassel client ] ]]
    core [[ description = [ Build the Quassel core ] ]]
    dbus [[ description = [ Use dbus for desktop integration features ] ]]
    kde [[ description = [ Integrate better with KDE ] ]]
    monolithic [[ description = [ Build a standalone IRC client ] ]]
    phonon [[ description = [ Use the phonon multimedia API instead of whole kdelibs ] ]]
    webengine [[ description = [ Use QtWebengine for URL previews ] ]]

    baselayout [[ requires = core ]]
    dbus? ( ( client monolithic ) [[ number-selected = at-least-one ]] )
    kde? ( ( client monolithic ) [[ number-selected = at-least-one ]] )
    phonon? ( ( client monolithic ) [[ number-selected = at-least-one ]] )
    webengine? ( ( client monolithic ) [[ number-selected = at-least-one ]] )

    ( client core monolithic ) [[ number-selected = at-least-one ]]
    ( kde phonon ) [[ number-selected = at-most-one ]]

    linguas: ${LANGS}
"
DEPENDENCIES="
    build:
        x11-libs/qttools:5[?gui(+)] [[ note = [ lconvert and lrelease for translations ] ]]
    build+run:
        x11-libs/qtbase:5[>=5.2][?gui(+)]
        x11-libs/qtscript:5

        client? (
            x11-libs/qtbase:5[gui(+)]
        )
        core? (
            app-crypt/qca[qt5(+)]
            x11-libs/qtbase:5[?gui(+)][sqlite]
        )
        dbus? (
            x11-libs/dbusmenu-qt[qt5(+)]
        )
        kde? (
            kde-frameworks/breeze-icons:5
            kde-frameworks/kconfigwidgets:5
            kde-frameworks/kcoreaddons:5
            kde-frameworks/knotifications:5
            kde-frameworks/knotifyconfig:5
            kde-frameworks/ktextwidgets:5
            kde-frameworks/kwidgetsaddons:5
            kde-frameworks/kxmlgui:5
            kde-frameworks/sonnet:5
        )
        monolithic? (
            x11-libs/qtbase:5[gui(+)]
        )
        phonon? (
            media-libs/phonon[qt5(+)]
        )
        webengine? (
            x11-libs/qtwebengine:5
        )
"

CMAKE_SRC_CONFIGURE_OPTION_DISABLE_FINDS=(
    'dbus dbusmenu-qt5'
    'phonon Phonon4Qt5'
)

CMAKE_SRC_CONFIGURE_OPTION_WITHS=(
    'kde KDE'
    '!kde BUNDLED_ICONS'
    'webengine WEBENGINE'
)

CMAKE_SRC_CONFIGURE_OPTION_WANTS=(
    'client QTCLIENT'
    'core CORE'
    'monolithic MONO'
)

CMAKE_SRC_CONFIGURE_PARAMS=(
    # ssl is always enabled on exherbo qt, and auto-detection fails
    # with qt5 due to http://bugs.quassel-irc.org/issues/1401
    '-DHAVE_SSL:BOOL=TRUE'
    '-DUSE_QT5:BOOL=TRUE'
    '-DWITH_OXYGEN_ICONS:BOOL=FALSE'
)

quassel_pkg_pretend() {
    if optionq core || optionq monolithic; then
        if [[ -z ${QUASSEL_MAJOR_UPGRADE} ]] && has_version --root ${CATEGORY}/${PN} && \
            ! has_version --root ${CATEGORY}/${PN}[=${QUASSEL_MAJOR_VERSION}*] ; then
            ewarn "Upgrading to a different major version of Quassel core/monolith will cause a database"
            ewarn "upgrade, which can possibly take several hours on large databases, and during which"
            ewarn "the core is not usable. You also cannot downgrade to a lower version after the"
            ewarn "upgrade. You should create a backup of your database before upgrading."
            ewarn "When you've done this, please set 'QUASSEL_MAJOR_UPGRADE=YesPlease', to continue the upgrade."
            ewarn "For more information visit https://quassel-irc.org/."
            die "Backup your databases before doing a major version upgrade of Quassel."
        fi
    fi
}

quassel_src_prepare() {
    cmake_src_prepare

    for lang in ${LANGS}; do
        if optionq linguas:${lang} ; then
            QUASSELLANGS+="${lang}"
        fi
    done
    export LINGUAS=${QUASSELLANGS}
}

quassel_src_install() {
    cmake_src_install

    if optionq baselayout ; then
        if optionq core ; then
            newinitd "${FILES}"/quasselcore quasselcore
            newconfd "${FILES}"/quasselcore.conf quasselcore
        fi
    fi
}

